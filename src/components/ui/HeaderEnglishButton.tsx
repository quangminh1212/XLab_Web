'use client';

import { useState, useEffect } from 'react';
import { useTranslation } from '@/context/TranslationContext';

export default function HeaderEnglishButton() {
  const { preferredLanguage, setPreferredLanguage, setTranslated } = useTranslation();
  const [mounted, setMounted] = useState(false);

  useEffect(() => {
    setMounted(true);
  }, []);

  const handleTranslate = () => {
    // Kh√¥ng s·ª≠ d·ª•ng e.preventDefault() v√¨ c√≥ th·ªÉ ngƒÉn ch·∫∑n h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh
    console.log('Translate button clicked', new Date().toISOString()); // Debug v·ªõi timestamp
    
    try {
      // S·ª≠ d·ª•ng Google Translate mi·ªÖn ph√≠
      const currentUrl = window.location.href;
      const targetLang = 'en'; // Lu√¥n d·ªãch sang ti·∫øng Anh t·ª´ n√∫t n√†y
      
      // C·∫≠p nh·∫≠t ng√¥n ng·ªØ ∆∞a th√≠ch
      setPreferredLanguage(targetLang);
      setTranslated(true);
      
      // URL Google Translate
      const translateUrl = `https://translate.google.com/translate?sl=auto&tl=${targetLang}&u=${encodeURIComponent(currentUrl)}`;
      
      // M·ªü URL trong tab m·ªõi
      const newWindow = window.open(translateUrl, '_blank');
      if (!newWindow) {
        alert('Popup b·ªã ch·∫∑n. Vui l√≤ng cho ph√©p popup cho trang web n√†y.');
      }
    } catch (error) {
      console.error('L·ªói khi chuy·ªÉn h∆∞·ªõng ƒë·∫øn Google Translate:', error);
      // Ph∆∞∆°ng √°n d·ª± ph√≤ng n·∫øu window.open() kh√¥ng ho·∫°t ƒë·ªông
      window.location.href = `https://translate.google.com/?sl=auto&tl=en&text=${encodeURIComponent(document.title)}`;
    }
  };

  if (!mounted) return null;

  // Style n√∫t gi·ªëng h·ªát nh∆∞ trong h√¨nh ·∫£nh
  return (
    <button
      onClick={handleTranslate}
      type="button"
      className="flex items-center gap-1 rounded-full px-3 py-2 text-sm font-medium border border-gray-200 hover:bg-gray-50 transition-colors"
    >
      <span role="img" aria-label="Globe" className="text-base">üåê</span>
      <span>English</span>
    </button>
  );
} 