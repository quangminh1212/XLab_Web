@echo off
rem Khong su dung tieng Viet co dau trong file .bat
setlocal enabledelayedexpansion

title XLab Web - All-in-One Launcher
color 0A

echo ========================================================
echo     XLab Web - All-in-One Launcher
echo ========================================================
echo.

REM X√°c ƒë·ªãnh ƒë∆∞·ªùng d·∫´n hi·ªán t·∫°i
cd /d "%~dp0"
echo Th∆∞ m·ª•c hi·ªán t·∫°i: %CD%
echo.

REM D·ª´ng c√°c ti·∫øn tr√¨nh Node.js
echo [1/13] D·ª´ng t·∫•t c·∫£ c√°c ti·∫øn tr√¨nh Node.js...
taskkill /F /IM node.exe >nul 2>&1
timeout /t 2 >nul
echo.

REM X√≥a cache Next.js
echo [2/13] X√≥a th∆∞ m·ª•c .next...
if exist ".next" (
    echo ƒêang x√≥a th∆∞ m·ª•c .next...
    rmdir /S /Q .next 2>nul

    REM Ki·ªÉm tra xem th∆∞ m·ª•c ƒë√£ ƒë∆∞·ª£c x√≥a ch∆∞a
    if exist ".next" (
        echo Kh√¥ng th·ªÉ x√≥a th∆∞ m·ª•c .next b·∫±ng c√°ch th√¥ng th∆∞·ªùng
        echo ƒêang d√πng ph∆∞∆°ng ph√°p x√≥a file c·ª• th·ªÉ...
        if exist ".next\trace" (
            del /F /S /Q ".next\trace\*.*" >nul 2>&1
            rmdir /S /Q ".next\trace" >nul 2>&1
        )
        if exist ".next\cache" (
            del /F /S /Q ".next\cache\*.*" >nul 2>&1 
            rmdir /S /Q ".next\cache" >nul 2>&1
        )
        del /F /S /Q ".next\*.*" >nul 2>&1
        rmdir /S /Q ".next" >nul 2>&1
    )
)
echo.

REM ƒê·∫∑t bi·∫øn m√¥i tr∆∞·ªùng c·ª• th·ªÉ cho Windows 10
echo [3/13] Thi·∫øt l·∫≠p bi·∫øn m√¥i tr∆∞·ªùng...
set NODE_OPTIONS=--max-old-space-size=4096 --dns-result-order=ipv4first --no-experimental-fetch --no-addons
set NEXT_TELEMETRY_DISABLED=1
set NODE_ENV=development
set NEXT_DEVELOPMENT_MODE=1
set NEXT_WEBPACK_ERROR_HANDLING=1
set CHOKIDAR_USEPOLLING=true
set WATCHPACK_POLLING=true
set NODE_NO_WARNINGS=1
echo.

REM T·∫°o file .env.local t∆∞∆°ng th√≠ch Windows 10
echo [4/13] T·∫°o file .env.local cho Windows...
(
echo NODE_OPTIONS=--max-old-space-size=4096 --dns-result-order=ipv4first --no-experimental-fetch --no-addons
echo NEXT_TELEMETRY_DISABLED=1
echo NODE_ENV=development
echo NEXT_DEVELOPMENT_MODE=1
echo NEXT_WEBPACK_ERROR_HANDLING=1
echo CHOKIDAR_USEPOLLING=true
echo WATCHPACK_POLLING=true
echo NODE_NO_WARNINGS=1
) > .env.local
echo.

REM T·∫°o npmrc t∆∞∆°ng th√≠ch Windows 10
echo [5/13] C·∫•u h√¨nh npm...
(
echo registry=https://registry.npmjs.org/
echo legacy-peer-deps=true
echo engine-strict=false
echo fund=false
echo progress=false
echo loglevel=error
echo ignore-scripts=false
echo cache-min=3600
echo prefer-offline=true
) > .npmrc
echo.

REM Ki·ªÉm tra th∆∞ m·ª•c node_modules
echo [6/13] Ki·ªÉm tra th∆∞ m·ª•c node_modules...
if not exist node_modules (
    echo Th∆∞ m·ª•c node_modules kh√¥ng t·ªìn t·∫°i, s·∫Ω c√†i ƒë·∫∑t m·ªõi
    set need_install=1
) else (
    echo Th∆∞ m·ª•c node_modules ƒë√£ t·ªìn t·∫°i
    set need_install=0
    
    REM Ki·ªÉm tra xem c√≥ c·∫ßn c√†i ƒë·∫∑t l·∫°i kh√¥ng
    set reset_install=n
    set /p reset_install=X√≥a node_modules v√† c√†i ƒë·∫∑t l·∫°i? (y/n): 
    if /i "%reset_install%"=="y" (
        echo X√≥a node_modules v√† c√†i ƒë·∫∑t l·∫°i...
        rmdir /S /Q node_modules
        set need_install=1
    )
)
echo.

REM T·∫°o th∆∞ m·ª•c t·∫°m th·ªùi n·∫øu kh√¥ng t·ªìn t·∫°i
if not exist "tmp" mkdir tmp
set TEMP=%CD%\tmp
set TMP=%CD%\tmp

REM Ki·ªÉm tra phi√™n b·∫£n Node.js (t√≠ch h·ª£p t·ª´ node-version-check.js)
echo [7/13] Ki·ªÉm tra phi√™n b·∫£n Node.js...
node -e "const currentNodeVersion = process.versions.node; const semver = currentNodeVersion.split('.'); const major = parseInt(semver[0], 10); console.log('Ki·ªÉm tra phi√™n b·∫£n Node.js: ' + currentNodeVersion); if (major < 16) { console.error('B·∫°n ƒëang s·ª≠ d·ª•ng Node.js ' + currentNodeVersion + '.\nD·ª± √°n n√†y y√™u c·∫ßu Node.js 16 ho·∫∑c m·ªõi h∆°n.\nVui l√≤ng c·∫≠p nh·∫≠t phi√™n b·∫£n Node.js c·ªßa b·∫°n.'); process.exit(1); } if (process.platform === 'win32' && major < 18) { console.warn('L∆∞u √Ω: B·∫°n ƒëang s·ª≠ d·ª•ng Node.js ' + currentNodeVersion + ' tr√™n Windows.\nM·ªôt s·ªë t√≠nh nƒÉng c√≥ th·ªÉ kh√¥ng ho·∫°t ƒë·ªông nh∆∞ mong ƒë·ª£i. Khuy·∫øn ngh·ªã s·ª≠ d·ª•ng Node.js 18 ho·∫∑c m·ªõi h∆°n.'); } try { eval('const test = null ?? \"default\"'); console.log('‚úÖ Tr√¨nh bi√™n d·ªãch h·ªó tr·ª£ to√°n t·ª≠ nullish coalescing (??)'); } catch (e) { console.error('‚ùå Phi√™n b·∫£n Node.js c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ to√°n t·ª≠ nullish coalescing (??).\nƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra l·ªói khi ch·∫°y d·ª± √°n.\nVui l√≤ng c·∫≠p nh·∫≠t l√™n Node.js 14 ho·∫∑c m·ªõi h∆°n.'); process.exit(1); } try { eval('const obj = {}; const test = obj?.property'); console.log('‚úÖ Tr√¨nh bi√™n d·ªãch h·ªó tr·ª£ to√°n t·ª≠ optional chaining (?)'); } catch (e) { console.error('‚ùå Phi√™n b·∫£n Node.js c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ to√°n t·ª≠ optional chaining (?).\nƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra l·ªói khi ch·∫°y d·ª± √°n.\nVui l√≤ng c·∫≠p nh·∫≠t l√™n Node.js 14 ho·∫∑c m·ªõi h∆°n.'); process.exit(1); } try { eval('let a = null; a = a || \"default\"'); console.log('‚úÖ Tr√¨nh bi√™n d·ªãch h·ªó tr·ª£ to√°n t·ª≠ logical OR'); } catch (e) { console.error('‚ùå L·ªói v·ªõi c√°c to√°n t·ª≠ logic trong Node.js c·ªßa b·∫°n.\nƒêi·ªÅu n√†y c√≥ th·ªÉ g√¢y ra l·ªói khi ch·∫°y d·ª± √°n.'); } console.log('‚úÖ Ki·ªÉm tra phi√™n b·∫£n Node.js ho√†n t·∫•t');"
if %ERRORLEVEL% neq 0 (
    echo.
    echo ========================================================
    echo     L·ªñI: Phi√™n b·∫£n Node.js kh√¥ng t∆∞∆°ng th√≠ch!
    echo     Vui l√≤ng c·∫≠p nh·∫≠t Node.js
    echo ========================================================
    echo.
    pause
    exit /b 1
)
echo.

REM C√†i ƒë·∫∑t dependencies n·∫øu c·∫ßn
echo [8/13] C√†i ƒë·∫∑t dependencies n·∫øu c·∫ßn...
if "%need_install%"=="1" (
    echo ƒêang c√†i ƒë·∫∑t dependencies...
    call npm install --legacy-peer-deps --no-fund
    echo.
) else (
    echo B·ªè qua c√†i ƒë·∫∑t dependencies, ƒë√£ c√≥ node_modules
    echo.
)

REM S·ª≠a l·ªói Windows v√† s·ª≠a l·ªói Node_modules
echo [9/13] S·ª≠a l·ªói c√°c module cho Windows...
node -e "const fs = require('fs'); const path = require('path'); const util = require('util'); const readFile = util.promisify(fs.readFile); const writeFile = util.promisify(fs.writeFile); const exists = util.promisify(fs.existsSync || ((p, cb) => cb(null, fs.existsSync(p)))); const MODULES_PATH = path.join(process.cwd(), 'node_modules'); async function patchFile(filePath, searchFunction) { try { if (!fs.existsSync(filePath)) { console.log(`File not found: ${filePath}`); return; } let content = await readFile(filePath, 'utf8'); const original = content; content = searchFunction(content); if (content !== original) { await writeFile(filePath, content, 'utf8'); console.log(`‚úÖ Patched: ${filePath}`); } else { console.log(`‚ÑπÔ∏è No change needed: ${filePath}`); } } catch (error) { console.error(`‚ùå Error patching ${filePath}:`, error); } } async function fixRequireHook() { const filePath = path.join(MODULES_PATH, 'next', 'dist', 'server', 'require-hook.js'); await patchFile(filePath, (content) => { if (content.includes('__non_webpack_require__')) { return content.replace(/let resolve = process\.env\.NEXT_MINIMAL \? __non_webpack_require__\.resolve : require\.resolve;/g, 'let resolve = require.resolve;'); } return content; }); } async function fixJSONParse() { const webpackFiles = [ path.join(MODULES_PATH, 'next', 'dist', 'compiled', 'webpack', 'bundle5.js'), path.join(MODULES_PATH, 'webpack', 'lib', 'NormalModule.js') ]; for (const filePath of webpackFiles) { await patchFile(filePath, (content) => { return content.replace(/JSON\.parse\(([^)]+)\)/g, 'JSON.parse($1 || \"{}\")'); }); } } async function fixWindowsPathIssues() { const pathFiles = [ path.join(MODULES_PATH, 'next', 'dist', 'server', 'utils.js'), path.join(MODULES_PATH, 'next', 'dist', 'server', 'load-components.js') ]; for (const filePath of pathFiles) { await patchFile(filePath, (content) => { return content .replace(/path\.join\(([^)]+)\)/g, 'path.join($1).replace(/\\\\/g, \"/\")') .replace(/path\.resolve\(([^)]+)\)/g, 'path.resolve($1).replace(/\\\\/g, \"/\")'); }); } } async function main() { console.log('üõ†Ô∏è Starting Windows module fixes...'); await fixRequireHook(); await fixJSONParse(); await fixWindowsPathIssues(); console.log('‚úÖ All module fixes applied!'); } main().catch(err => { console.error('‚ùå Error in fix script:', err); });"
echo.

REM S·ª≠a l·ªói to√°n t·ª≠ logic (t√≠ch h·ª£p t·ª´ fix-operators.js)
echo [10/13] S·ª≠a l·ªói to√°n t·ª≠ logic trong m√£ ngu·ªìn...
node -e "const fs = require('fs'); const path = require('path'); const util = require('util'); const readFile = util.promisify(fs.readFile); const writeFile = util.promisify(fs.writeFile); const readdir = util.promisify(fs.readdir); const stat = util.promisify(fs.stat); const IGNORE_DIRS = ['node_modules','.git','.next','out','public','dist','build','tmp']; async function findJSFiles(dir) { const files = []; async function scanDir(directory) { try { const entries = await readdir(directory); for (const entry of entries) { if (IGNORE_DIRS.includes(entry)) continue; const fullPath = path.join(directory, entry); try { const stats = await stat(fullPath); if (stats.isDirectory()) { await scanDir(fullPath); } else if (stats.isFile() && (entry.endsWith('.js') || entry.endsWith('.ts') || entry.endsWith('.jsx') || entry.endsWith('.tsx'))) { files.push(fullPath); } } catch (err) { console.log(`Skipping ${fullPath} due to error:`, err.message); } } } catch (err) { console.log(`Skipping directory ${directory} due to error:`, err.message); } } await scanDir(dir); return files; } async function fixOperatorsInFile(filePath) { try { console.log(`ƒêang ki·ªÉm tra: ${filePath}`); let content = await readFile(filePath, 'utf8'); const original = content; content = content.replace(/(\w+)\s*\|\|=\s*([^;]+);/g, '$1 = $1 || $2;'); content = content.replace(/(\w+)\s*&&=\s*([^;]+);/g, '$1 = $1 && $2;'); content = content.replace(/(\w+)\s*\?\?=\s*([^;]+);/g, '$1 = $1 ?? $2;'); if (content !== original) { await writeFile(filePath, content, 'utf8'); console.log(`‚úÖ ƒê√£ s·ª≠a: ${filePath}`); return true; } else { return false; } } catch (error) { console.error(`‚ùå L·ªói khi s·ª≠a file ${filePath}:`, error.message); return false; } } async function main() { console.log('üîç ƒêang t√¨m c√°c file c·∫ßn s·ª≠a...'); const rootDir = process.cwd(); const jsFiles = await findJSFiles(rootDir); console.log(`T√¨m th·∫•y ${jsFiles.length} file JS/TS c·∫ßn ki·ªÉm tra`); let fixedCount = 0; for (const file of jsFiles) { const fixed = await fixOperatorsInFile(file); if (fixed) fixedCount++; } console.log(`‚úÖ Ho√†n t·∫•t! ƒê√£ s·ª≠a ${fixedCount} file.`); } main().catch(err => { console.error('‚ùå L·ªói khi ch·∫°y script:', err.message); });"
echo.

REM S·ª≠a l·ªói webpack.js - ƒë·∫∑c bi·ªát quan tr·ªçng cho l·ªói 'unexpected token ||'
echo [11/13] S·ª≠a l·ªói webpack.js v√† c√°c l·ªói t∆∞∆°ng t·ª±...
REM C√°ch ti·∫øp c·∫≠n m·ªõi: S·ª≠a tri·ªát ƒë·ªÉ h∆°n c√°c file webpack
node -e "
const fs = require('fs');
const path = require('path');
const modulesPath = path.join(process.cwd(), 'node_modules');

async function fixWebpackFiles() {
  try {
    // Danh s√°ch c√°c file webpack c·∫ßn ki·ªÉm tra v√† s·ª≠a
    const webpackFiles = [
      path.join(modulesPath, 'next', 'dist', 'compiled', 'webpack', 'webpack.js'),
      path.join(modulesPath, 'next', 'dist', 'compiled', 'webpack', 'bundle5.js'),
      path.join(modulesPath, 'webpack', 'lib', 'javascript', 'JavascriptParser.js'),
      // Th√™m file webpack quan tr·ªçng
      path.join(modulesPath, 'next', 'dist', 'compiled', 'webpack', 'bundle-webpack.js'),
      path.join(modulesPath, 'next', 'dist', 'server', 'config-utils.js')
    ];

    // Duy·ªát c√°c th∆∞ m·ª•c webpack ƒë·ªÉ t√¨m th√™m file
    const webpackDirs = [
      path.join(modulesPath, 'next', 'dist', 'compiled', 'webpack'),
      path.join(modulesPath, 'webpack')
    ];

    const allFiles = [];
    
    // Th√™m t·∫•t c·∫£ c√°c file t·ª´ danh s√°ch c·ªë ƒë·ªãnh
    for (const file of webpackFiles) {
      if (fs.existsSync(file)) {
        allFiles.push(file);
      }
    }

    // T√¨m th√™m c√°c file webpack.js trong c√°c th∆∞ m·ª•c webpack
    for (const dir of webpackDirs) {
      if (fs.existsSync(dir)) {
        try {
          const entries = await fs.promises.readdir(dir, { withFileTypes: true });
          
          for (const entry of entries) {
            if (entry.isFile() && entry.name.endsWith('.js')) {
              allFiles.push(path.join(dir, entry.name));
            } else if (entry.isDirectory()) {
              try {
                const subdirFiles = await fs.promises.readdir(path.join(dir, entry.name));
                for (const file of subdirFiles) {
                  if (file.endsWith('.js')) {
                    allFiles.push(path.join(dir, entry.name, file));
                  }
                }
              } catch (err) {
                console.log(`Kh√¥ng th·ªÉ ƒë·ªçc th∆∞ m·ª•c ${path.join(dir, entry.name)}: ${err.message}`);
              }
            }
          }
        } catch (err) {
          console.log(`Kh√¥ng th·ªÉ ƒë·ªçc th∆∞ m·ª•c ${dir}: ${err.message}`);
        }
      }
    }

    // X·ª≠ l√Ω ƒë·∫∑c bi·ªát cho webpack.js - c√≥ th·ªÉ l√† ngu·ªìn g·ªëc c·ªßa l·ªói
    const webpackJsPath = path.join(modulesPath, 'next', 'dist', 'compiled', 'webpack', 'webpack.js');
    if (fs.existsSync(webpackJsPath)) {
      try {
        console.log(`ƒêang x·ª≠ l√Ω ƒë·∫∑c bi·ªát cho file webpack.js quan tr·ªçng...`);
        let content = await fs.promises.readFile(webpackJsPath, 'utf8');
        
        // Thay th·∫ø to√†n b·ªô c√∫ ph√°p c√≥ th·ªÉ g√¢y l·ªói
        const original = content;
        
        // S·ª≠a tri·ªát ƒë·ªÉ c√°c to√°n t·ª≠ c√≥ th·ªÉ g√¢y l·ªói
        content = content.replace(/(\w+)\s*\|\|=\s*([^;,\n)]+)/g, '$1 = $1 || $2');
        content = content.replace(/(\w+)\s*&&=\s*([^;,\n)]+)/g, '$1 = $1 && $2');
        content = content.replace(/(\w+)\s*\?\?=\s*([^;,\n)]+)/g, '$1 = $1 ?? $2');
        
        // Thay th·∫ø c√∫ ph√°p nullish coalescing
        content = content.replace(/([^=!><*/%+-]+)\s*\?\?\s*([^;,\n)]+)/g, '(($1 !== null && $1 !== undefined) ? $1 : $2)');
        
        // S·ª≠a c√°c to√°n t·ª≠ logic assignment kh√°c
        content = content.replace(/\|\|=/g, '= ||');
        content = content.replace(/&&=/g, '= &&');
        content = content.replace(/\?\?=/g, '= ??');
        
        if (content !== original) {
          await fs.promises.writeFile(webpackJsPath, content, 'utf8');
          console.log(`‚úÖ ƒê√£ s·ª≠a file quan tr·ªçng: ${webpackJsPath}`);
        }
      } catch (err) {
        console.error(`‚ùå L·ªói khi s·ª≠a file webpack.js: ${err.message}`);
      }
    }

    // X·ª≠ l√Ω t·∫•t c·∫£ c√°c file webpack ƒë√£ t√¨m th·∫•y
    console.log(`T√¨m th·∫•y ${allFiles.length} file webpack c·∫ßn ki·ªÉm tra`);
    
    for (const file of allFiles) {
      console.log(`ƒêang ki·ªÉm tra: ${file}`);
      try {
        let content = await fs.promises.readFile(file, 'utf8');
        
        // Ch·ªâ s·ª≠a c√°c file c√≥ ch·ª©a to√°n t·ª≠ c√≥ th·ªÉ g√¢y l·ªói
        if (content.includes('||=') || content.includes('&&=') || content.includes('??=') || 
            content.includes(' ?? ') || content.includes('?.')) {
          
          const original = content;
          
          // S·ª≠a c√°c to√°n t·ª≠ g√¢y l·ªói
          content = content.replace(/(\w+)\s*\|\|=\s*([^;,\n)]+)/g, '$1 = $1 || $2');
          content = content.replace(/(\w+)\s*&&=\s*([^;,\n)]+)/g, '$1 = $1 && $2');
          content = content.replace(/(\w+)\s*\?\?=\s*([^;,\n)]+)/g, '$1 = $1 ?? $2');
          
          // Thay th·∫ø c√∫ ph√°p nullish coalescing
          content = content.replace(/([^=!><*/%+-]+)\s*\?\?\s*([^;,\n)]+)/g, '(($1 !== null && $1 !== undefined) ? $1 : $2)');
          
          // S·ª≠a c√°c to√°n t·ª≠ logic assignment kh√°c
          content = content.replace(/\|\|=/g, '= ||');
          content = content.replace(/&&=/g, '= &&');
          content = content.replace(/\?\?=/g, '= ??');
          
          if (content !== original) {
            await fs.promises.writeFile(file, content, 'utf8');
            console.log(`‚úÖ ƒê√£ s·ª≠a: ${file}`);
          }
        }
      } catch (err) {
        console.log(`L·ªói khi x·ª≠ l√Ω file ${file}: ${err.message}`);
      }
    }
    
    console.log('‚úÖ Ho√†n t·∫•t vi·ªác s·ª≠a l·ªói c√°c file webpack!');
  } catch (err) {
    console.error(`‚ùå L·ªói khi s·ª≠a l·ªói webpack: ${err.message}`);
  }
}

fixWebpackFiles();
"
echo.

REM T·∫°o file .babelrc n·∫øu ch∆∞a c√≥ ƒë·ªÉ t∆∞∆°ng th√≠ch v·ªõi c√∫ ph√°p ES5
echo [11a/13] T·∫°o file .babelrc n·∫øu c·∫ßn...
if not exist .babelrc (
  echo T·∫°o file .babelrc ƒë·ªÉ t∆∞∆°ng th√≠ch v·ªõi ES5...
  (
    echo {
    echo   "presets": [
    echo     [
    echo       "next/babel",
    echo       {
    echo         "preset-env": {
    echo           "targets": {
    echo             "node": "current"
    echo           }
    echo         }
    echo       }
    echo     ]
    echo   ]
    echo }
  ) > .babelrc
  echo ‚úÖ ƒê√£ t·∫°o file .babelrc
)
echo.

REM L√†m s·∫°ch cache npm n·∫øu c·∫ßn thi·∫øt
echo [12/13] Ki·ªÉm tra v√† l√†m s·∫°ch cache npm n·∫øu c·∫ßn...
set "npm_cache_dir=%APPDATA%\npm-cache"
for /f "tokens=1,2 delims= " %%a in ('npm cache verify --loglevel=error ^| findstr /C:"Cache verified and compressed"') do (
    if not "%%a %%b"=="Cache verified" (
        echo L√†m s·∫°ch cache npm...
        call npm cache clean --force
    ) else (
        echo Cache npm ƒë√£ OK, b·ªè qua b∆∞·ªõc l√†m s·∫°ch
    )
)
echo.

REM Th√™m c√°c s·ª≠a l·ªói cu·ªëi c√πng
echo [13/13] √Åp d·ª•ng c√°c s·ª≠a l·ªói cu·ªëi c√πng...
REM Th√™m c√°c file ƒë∆∞·ª£c t·∫°o khi d·ª± √°n ch·∫°y v√†o .gitignore n·∫øu ch∆∞a c√≥
echo C·∫≠p nh·∫≠t .gitignore...
findstr /c:"**/.next/cache/**" .gitignore >nul 2>&1
if errorlevel 1 (
    echo # Th√™m cache v√† c√°c file t·∫°m th·ªùi kh√°c >> .gitignore
    echo .swc/ >> .gitignore
    echo .node-version >> .gitignore
    echo .npm/ >> .gitignore
    echo .eslintcache >> .gitignore
    echo tsconfig.tsbuildinfo >> .gitignore
    echo .cache/ >> .gitignore
    echo *.log >> .gitignore
    echo **/.next/cache/** >> .gitignore
    echo **/.next/server/** >> .gitignore
)

REM S·ª≠a ƒë·ªïi next.config.js
echo C·∫≠p nh·∫≠t c·∫•u h√¨nh Next.js...
node -e "
const fs = require('fs');
const path = require('path');

// C·∫≠p nh·∫≠t next.config.js ƒë·ªÉ th√™m c·∫•u h√¨nh t∆∞∆°ng th√≠ch
try {
  const configPath = path.join(process.cwd(), 'next.config.js');
  if (fs.existsSync(configPath)) {
    let content = fs.readFileSync(configPath, 'utf8');
    let updated = false;
    
    // Th√™m c·∫•u h√¨nh webpack ignoreWarnings n·∫øu ch∆∞a c√≥
    if (content.includes('webpack:') && !content.includes('ignoreWarnings:')) {
      content = content.replace(
        /webpack:\s*\((.*?)\)\s*=>\s*\{/s, 
        'webpack: ($1) => { config.ignoreWarnings = [ { module: /node_modules/ }, /Can\\\'t resolve/, /Critical dependency/ ];'
      );
      updated = true;
    }
    
    // Th√™m c·∫•u h√¨nh SWC t∆∞∆°ng th√≠ch
    if (!content.includes('swcMinify:')) {
      content = content.replace(
        /module\.exports\s*=\s*(\{)/s, 
        'module.exports = {\n  swcMinify: false,\n  transpilePackages: [\'next\'],'
      );
      updated = true;
    }
    
    // Th√™m c·∫•u h√¨nh ESLint n·∫øu ch∆∞a c√≥
    if (!content.includes('eslint:')) {
      content = content.replace(
        /module\.exports\s*=\s*(\{)/s, 
        'module.exports = {\n  eslint: { ignoreDuringBuilds: true },'
      );
      updated = true;
    }
    
    // Th√™m c·∫•u h√¨nh TypeScript n·∫øu ch∆∞a c√≥
    if (!content.includes('typescript:')) {
      content = content.replace(
        /module\.exports\s*=\s*(\{)/s, 
        'module.exports = {\n  typescript: { ignoreBuildErrors: true },'
      );
      updated = true;
    }
    
    if (updated) {
      fs.writeFileSync(configPath, content, 'utf8');
      console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t next.config.js');
    } else {
      console.log('‚ÑπÔ∏è next.config.js kh√¥ng c·∫ßn c·∫≠p nh·∫≠t');
    }
  }
} catch (err) {
  console.error(`‚ùå L·ªói khi c·∫≠p nh·∫≠t next.config.js: ${err.message}`);
}
"
echo.

echo Kh·ªüi ƒë·ªông ·ª©ng d·ª•ng...
echo.
echo ========================================================
echo     STARTING XLAB WEB
echo     Press Ctrl+C ƒë·ªÉ d·ª´ng l·∫°i
echo ========================================================
echo.

REM Kh·ªüi ƒë·ªông ·ª©ng d·ª•ng v·ªõi c·∫•u h√¨nh ph√π h·ª£p
set "NODE_OPTIONS=--max-old-space-size=4096 --dns-result-order=ipv4first --no-experimental-fetch --no-warnings --no-addons"
call npm run dev

echo.
echo ========================================================
echo     APPLICATION STOPPED
echo ========================================================
echo.
pause
exit /b 0
